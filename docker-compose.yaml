version: '3'

services:
  api-service:
    container_name: api-service
    build:
      context: ./api-service
      dockerfile: Dockerfile
    environment:
      - TRANSACTION_SERVICE_URL=http://transaction-service:8086/api/v1
      - USERS_SERVICE_URL=http://users-service:8087/api/v1
      - APPS_PORT=8085
    ports:
      - "8085:8085"
    depends_on:
      - postgres_db
      - users-service
      - transaction-service
    networks:
      - pegadaian_network
  transaction-service:
    container_name: transaction-service
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    environment:
      - POSTGRE_HOST=postgre-pegadaian
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=postgres
      - POSTGRE_DB=pegadaian
      - POSTGRE_PORT=5432
      - APPS_PORT=8086
    ports:
      - "8086:8086"
    depends_on:
      - postgres_db
    networks:
      - pegadaian_network
    restart: always

  users-service:
    container_name: users-service
    build:
      context: ./users-service
      dockerfile: Dockerfile
    environment:
      - POSTGRE_HOST=postgre-pegadaian
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=postgres
      - POSTGRE_DB=pegadaian
      - POSTGRE_PORT=5432
      - APPS_PORT=8087
    ports:
      - "8087:8087"
    depends_on:
      - postgres_db
    networks:
      - pegadaian_network
    restart: always

  postgres_db:
    container_name: postgre-pegadaian
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pegadaian
    ports:
      - "5432:5432"
    networks:
      - pegadaian_network
    restart: always

networks:
  pegadaian_network: